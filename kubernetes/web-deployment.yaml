apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: front
        image: frontend
        env:
        - name: PORT
          value: "8080"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mask-crnn
spec:
  selector:
    matchLabels:
      app: mask-crnn
  template:
    metadata:
      labels:
        app: mask-crnn
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: mask-crnn
        image: mask-crnn
        env:
        - name: PORT
          value: "8080"
        - name: CONTROLLER_ADDRESS
          value: "frontend-internal:8080"
        - name: OUTPUT_BOXES
          value: "False"
        - name: OUTPUT_MASKS
          value: "True"
        - name: CONFIDENCE_THRESHOLD
          value: "0.7"
        - name: PYTHONUNBUFFERED
          value: "True"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openpose
spec:
  selector:
    matchLabels:
      app: openpose
  template:
    metadata:
      labels:
        app: openpose
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: openpose
        image: openpose
        env:
        - name: PORT
          value: "8080"
        - name: CONTROLLER_ADDRESS
          value: "frontend-internal:8080"
        - name: OUTPUT_BOXES
          value: "False"
        - name: OUTPUT_POSES
          value: "True"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yolov3
spec:
  selector:
    matchLabels:
      app: yolov3
  template:
    metadata:
      labels:
        app: yolov3
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: yolov3
        image: yolov3
        env:
        - name: PORT
          value: "8080"
        - name: CONTROLLER_ADDRESS
          value: "frontend-internal:8080"
        - name: PYTHONUNBUFFERED
          value: "True"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mirror
spec:
  selector:
    matchLabels:
      app: mirror
  template:
    metadata:
      labels:
        app: mirror
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: mirror
        image: mirror
        env:
        - name: PORT
          value: "8080"
        - name: CONTROLLER_ADDRESS
          value: "frontend-internal:8080"
        - name: PYTHONUNBUFFERED
          value: "True"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-internal
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 8080
