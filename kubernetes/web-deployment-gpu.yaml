apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: front
        image: frontend
        env:
        - name: PORT
          value: "8080"
        - name: PYTHONUNBUFFERED
          value: "True"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mask-rcnn-gpu
spec:
  selector:
    matchLabels:
      app: mask-rcnn-gpu
  template:
    metadata:
      labels:
        app: mask-rcnn-gpu
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: mask-rcnn-gpu
        image: mask-rcnn-gpu
        resources:
          limits:
           nvidia.com/gpu: 1
        env:
        - name: PORT
          value: "8080"
        - name: CONTROLLER_ADDRESS
          value: "frontend-internal:8080"
        - name: OUTPUT_BOXES
          value: "False"
        - name: OUTPUT_MASKS
          value: "True"
        - name: CONFIDENCE_THRESHOLD
          value: "0.7"
        - name: PYTHONUNBUFFERED
          value: "True"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openpose-gpu
spec:
  selector:
    matchLabels:
      app: openpose-gpu
  template:
    metadata:
      labels:
        app: openpose-gpu
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: openpose-gpu
        image: openpose-gpu
        resources:
          limits:
           nvidia.com/gpu: 1
        env:
        - name: PORT
          value: "8080"
        - name: CONTROLLER_ADDRESS
          value: "frontend-internal:8080"
        - name: OUTPUT_BOXES
          value: "False"
        - name: OUTPUT_POSES
          value: "True"
        - name: PYTHONUNBUFFERED
          value: "True"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: friend-recognizer
spec:
  selector:
    matchLabels:
      app: friend-recognizer
  template:
    metadata:
      labels:
        app: friend-recognizer
    spec:
      terminationGracePeriodSeconds: 5
      containers:
      - name: friend-recognizer
        image: friend-recognizer
        env:
        - name: PORT
          value: "8080"
        - name: CONTROLLER_ADDRESS
          value: "frontend-internal:8080"
        - name: RECOGNITION_CONFIDENCE_THRESHOLD
          value: "0.9"
        - name: DETECTION_CONFIDENCE_THRESHOLD
          value: "20"
        - name: PYTHONUNBUFFERED
          value: "True"
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-internal
spec:
  type: ClusterIP
  selector:
    app: frontend
  ports:
  - name: http
    port: 8080
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nvidia-driver-installer
  namespace: kube-system
  labels:
    k8s-app: nvidia-driver-installer
spec:
  selector:
    matchLabels:
      k8s-app: nvidia-driver-installer
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: nvidia-driver-installer
        k8s-app: nvidia-driver-installer
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: cloud.google.com/gke-accelerator
                operator: Exists
      tolerations:
      - operator: "Exists"
      hostNetwork: true
      hostPID: true
      volumes:
      - name: dev
        hostPath:
          path: /dev
      - name: vulkan-icd-mount
        hostPath:
          path: /home/kubernetes/bin/nvidia/vulkan/icd.d
      - name: nvidia-install-dir-host
        hostPath:
          path: /home/kubernetes/bin/nvidia
      - name: root-mount
        hostPath:
          path: /
      - name: cos-tools
        hostPath:
          path: /var/lib/cos-tools
      initContainers:
      - image: "cos-nvidia-installer:fixed"
        imagePullPolicy: Never
        name: nvidia-driver-installer
        resources:
          requests:
            cpu: 0.15
        securityContext:
          privileged: true
        env:
          - name: NVIDIA_INSTALL_DIR_HOST
            value: /home/kubernetes/bin/nvidia
          - name: NVIDIA_INSTALL_DIR_CONTAINER
            value: /usr/local/nvidia
          - name: VULKAN_ICD_DIR_HOST
            value: /home/kubernetes/bin/nvidia/vulkan/icd.d
          - name: VULKAN_ICD_DIR_CONTAINER
            value: /etc/vulkan/icd.d
          - name: ROOT_MOUNT_DIR
            value: /root
          - name: COS_TOOLS_DIR_HOST
            value: /var/lib/cos-tools
          - name: COS_TOOLS_DIR_CONTAINER
            value: /build/cos-tools
        volumeMounts:
        - name: nvidia-install-dir-host
          mountPath: /usr/local/nvidia
        - name: vulkan-icd-mount
          mountPath: /etc/vulkan/icd.d
        - name: dev
          mountPath: /dev
        - name: root-mount
          mountPath: /root
        - name: cos-tools
          mountPath: /build/cos-tools
      containers:
      - image: "gcr.io/google-containers/pause:2.0"
        name: pause
